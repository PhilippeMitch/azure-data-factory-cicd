name: azure-data-factory-cicd-project

on:
  push:
    branches:
      - main
      - develop

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install ADF Utilities package
        run: npm install
        working-directory: ${{ github.workspace }}/build

      - name: Validate ADF resources
        run: npm run build validate ${{ github.workspace }}/ /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/MLOps/providers/Microsoft.DataFactory/factories/dev-mitch-adf-cicd
        working-directory: ${{ github.workspace }}/build

      - name: Validate and Generate ARM template
        run: npm run build export ${{ github.workspace }}/ /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/MLOps/providers/Microsoft.DataFactory/factories/dev-mitch-adf-cicd ExportedArmTemplate --global-parameters
        working-directory: ${{ github.workspace }}/build

      - name: Upload ARM template artifact
        uses: actions/upload-artifact@v4
        with:
          name: ExportedArmTemplate
          path: ${{ github.workspace }}/build/ExportedArmTemplate

  release:
    needs: build
    runs-on: ubuntu-latest
    # environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    steps:
      - name: Set target Data Factory name
        id: set-target
        run: |
          echo "Listing secrets name:"
          echo "storage_name=${{ secrets.STORAGE_NAME }}"
          if [ -z "${{ secrets.AZURE_CLIENT_ID }}" ]; then
            echo "❌ AZURE_CLIENT_ID is empty or not set"
            exit 1
          else
            echo "✅ AZURE_CLIENT_ID is set"
          fi

          if [ -z "${{ secrets.AZURE_TENANT_ID }}" ]; then
            echo "❌ AZURE_TENANT_ID is empty or not set"
            exit 1
          else
            echo "✅ AZURE_TENANT_ID is set"
          fi
      
          if [ -z "${{ secrets.AZURE_SUBSCRIPTION_ID }}" ]; then
            echo "❌ AZURE_SUBSCRIPTION_ID is empty or not set"
            exit 1
          else
            echo "✅ AZURE_SUBSCRIPTION_ID is set"
          fi
    
          echo "Client ID=${{ secrets.AZURE_CLIENT_ID }}"
          echo "Tenant ID=${{ secrets.AZURE_TENANT_ID }}"
          echo "Subscription=${{ secrets.AZURE_SUBSCRIPTION_ID }}"
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "data_factory_name=prod-mitch-adf-cicd" >> $GITHUB_OUTPUT
            echo "storage_name=${{ secrets.STORAGE_NAME }}" >> $GITHUB_OUTPUT
            echo "container_name=${{ secrets.CONTAINER_NAME }}" >> $GITHUB_OUTPUT
            echo "environment=prod" >> $GITHUB_OUTPUT
          else
            echo "data_factory_name=dev-mitch-adf-cicd" >> $GITHUB_OUTPUT
            echo "storage_name=${{ secrets.STORAGE_NAME }}" >> $GITHUB_OUTPUT
            echo "container_name=${{ secrets.CONTAINER_NAME }}" >> $GITHUB_OUTPUT
            echo "environment=dev" >> $GITHUB_OUTPUT
          fi
          
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ExportedArmTemplate

      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Debug deployment values
        run: |
          echo "Factory Name: ${{ steps.set-target.outputs.data_factory_name }}"
          echo "Storage Name: ${{ steps.set-target.outputs.storage_name }}"
          echo "Container Name: ${{ steps.set-target.outputs.container_name }}"
          echo "Environment: ${{ steps.set-target.outputs.environment }}"

      - name: Debug ARM template
        run: |
          echo "=== ARMTemplateParametersForFactory.json ==="
          cat ARMTemplateParametersForFactory.json
          echo "=== GlobalParameters.json (if exists) ==="
          if [ -f GlobalParameters.json ]; then
            cat GlobalParameters.json
          fi

      - name: Deploy to Data Factory
        uses: Azure/data-factory-deploy-action@v1.2.0
        with:
          resourceGroupName: DataOps
          dataFactoryName: ${{ steps.set-target.outputs.data_factory_name }}
          armTemplateFile: ARMTemplateForFactory.json
          armTemplateParametersFile: ARMTemplateParametersForFactory.json
          additionalParameters: |
            factoryName=${{ steps.set-target.outputs.data_factory_name }}

      # Patch global parameters for prod
      - name: Patch global parameters for prod
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Patching global parameters with prod values..."
          jq '.globalParameters.storage_name.value = "${{ secrets.STORAGE_NAME }}" |
              .globalParameters.container_name.value = "${{ secrets.CONTAINER_NAME }}" |
              .globalParameters.environment.value = "prod"' \
              dev-mitch-adf-cicd_GlobalParameters.json > GlobalParameters.json

      # Use unmodified dev global parameters for non-prod
      - name: Use dev global parameters
        if: github.ref != 'refs/heads/main'
        run: cp dev-mitch-adf-cicd_GlobalParameters.json GlobalParameters.json

      - name: Install Azure Data Factory extension
        run: |
          az extension add --name datafactory

      - name: Deploy global parameters
        run: |
          echo "Deploying global parameters to ${{ steps.set-target.outputs.data_factory_name }}"
          az deployment group create \
            --resource-group DataOps \
            --template-file GlobalParameters.json \
            --mode Incremental
